# vm-example
#
# Box with essential packages and tools installed via Puppet.
#
# NOTE: Make sure you have the base boxes installed.
# vagrant box add bento/ubuntu-16.04
# vagrant box add ubuntu/xenial64

Vagrant.configure("2") do |config|
#
# vagrant vox configuration
#

  config.vm.box         = "bento/ubuntu-16.04"
  config.vm.box_version = "2.3.8"
  config.vm.box_url     = "https://vagrantcloud.com/bento/boxes/ubuntu-16.04/versions/2.3.8/providers/virtualbox.box"

  # ubuntu xenial has issues...
  #config.vm.box         = "ubuntu/xenial64"
  #config.vm.box_version = "20170803.0.0"
  #config.vm.box_url     = "https://vagrantcloud.com/ubuntu/boxes/xenial64/versions/20170803.0.0/providers/virtualbox.box"

#
# general configuration
#
  config.vm.hostname    = "vagrant-ubuntu-16-04-box"

#
# network configuration
#
  #config.vm.base_mac    = "02C0E23C7112"
  #config.vm.network :private_network, ip: "192.168.0.19", nic_type: "82540EM",
  #                  virtualbox__intnet: true,
  #                  virtualbox__nic: "bridged",
  #                  virtualbox__cableconnected: "on",
  #                  virtualbox__bridgeadapter: "enp0s31f6",
  #                  virtualbox__macaddress: "auto"

  # forward guest's port 80 to hosts's port 300 on host
  #config.vm.forward_port 80, 3000

  # ssh
  #config.ssh.private_key_path = "/path/to/id_rsa"

#
# virtualbox provider
#
  config.vm.provider :virtualbox do |vb|
    # enable vm gui mode (display mode)
    vb.gui    = true

    # customize virtualbox vm using vagrant shortcuts
    vb.name   = "vagrant-ubuntu-16-04-box"
    vb.cpus   = 1
    vb.memory = 512

    # customize virtualbox vm using 'vboxmanage'
    #vb.customize ["modifyvm", :id, "--name", "vagrant-ubuntu-16-04-box"]
    #vb.customize ["modifyvm", :id, "--cpuexecutioncap", "50",
    #                               "--memory", "512"]

    # require to avoid to be blocked when connecting to guest ssh server
    vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
  end

#
# shared folders // since agrant 1.1+ used synced folders
#
  config.vm.synced_folder "vagrant_user_shared_folder", "/vagrant_user_shared_folder", create: true
  # config.vm.synced_folder ".", "/vagrant", create: true, disabled: true, type: "nfs"

#
# puppet on guest
#
  config.vm.provision "shell", :inline => <<-SHELL
    apt-get update
    apt-get install -y puppet
  SHELL

#
# puppet provisioner
#
  config.vm.provision :puppet do |puppet|
    puppet.options          = "--verbose --debug"
    puppet.environment_path = "puppet"
    puppet.environment      = "environment"
    puppet.module_path      = "puppet/modules"
  end
end
